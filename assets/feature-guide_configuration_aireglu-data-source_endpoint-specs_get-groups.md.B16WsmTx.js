import{_ as s,c as n,o as a,a5 as t}from"./chunks/framework.IdkiGMKn.js";const h=JSON.parse('{"title":"get-groups","description":"","frontmatter":{"next":{"text":"get-structural-entities","link":"/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-structural-entities"}},"headers":[],"relativePath":"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-groups.md","filePath":"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-groups.md"}'),p={name:"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-groups.md"},e=t(`<h1 id="get-groups" tabindex="-1">get-groups <a class="header-anchor" href="#get-groups" aria-label="Permalink to &quot;get-groups&quot;">​</a></h1><h2 id="specification-version" tabindex="-1">Specification Version <a class="header-anchor" href="#specification-version" aria-label="Permalink to &quot;Specification Version&quot;">​</a></h2><p>Version: <code>&quot;1&quot;</code></p><h2 id="context-and-rules" tabindex="-1">Context and rules <a class="header-anchor" href="#context-and-rules" aria-label="Permalink to &quot;Context and rules&quot;">​</a></h2><p>Required for the <code>SubjectRead</code> capability.</p><p>Returns details of <a href="/feature-guide/configuration/structure.html#groups">groups</a>, including the keys of the structural entities which are assigned to them, when an array of group keys is passed in.</p><p>The structural entity keys returned should be compatible with the <a href="/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-structural-entities.html">get-structural-entities</a> endpoint.</p><h2 id="endpoint-specification" tabindex="-1">Endpoint specification <a class="header-anchor" href="#endpoint-specification" aria-label="Permalink to &quot;Endpoint specification&quot;">​</a></h2><ul><li><strong>Name</strong>: <code>endpoint-prefix</code>-aireframe-get-groups</li><li><strong>Verb</strong>: POST</li><li><strong>Authentication</strong>: Client credentials</li></ul><h3 id="input" tabindex="-1">Input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;Input&quot;">​</a></h3><ul><li><strong>Format</strong>: JSON</li><li><strong>Schema</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,</span></span>
<span class="line"><span>	&quot;title&quot;: &quot;get-groups-input&quot;,</span></span>
<span class="line"><span>	&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>    &quot;required&quot;: [</span></span>
<span class="line"><span>		&quot;Keys&quot;</span></span>
<span class="line"><span>	],</span></span>
<span class="line"><span>	&quot;properties&quot;: {</span></span>
<span class="line"><span>		&quot;Keys&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>			&quot;items&quot;: {</span></span>
<span class="line"><span>				&quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>			}</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	}	</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>Example</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;Keys&quot;: [</span></span>
<span class="line"><span>		&quot;admin&quot;</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-label="Permalink to &quot;Response&quot;">​</a></h3><ul><li><strong>Format</strong>: JSON</li><li><strong>Schema</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,</span></span>
<span class="line"><span>  &quot;title&quot;: &quot;get-groups-response&quot;,</span></span>
<span class="line"><span>  &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>  &quot;required&quot;: [</span></span>
<span class="line"><span>    &quot;Groups&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;properties&quot;: {</span></span>
<span class="line"><span>    &quot;Groups&quot;: {</span></span>
<span class="line"><span>      &quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>      &quot;items&quot;: {</span></span>
<span class="line"><span>        &quot;Group&quot;: {</span></span>
<span class="line"><span>            &quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>            &quot;properties&quot;: {</span></span>
<span class="line"><span>                &quot;Key&quot;: {</span></span>
<span class="line"><span>                    &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>                },</span></span>
<span class="line"><span>                &quot;DisplayName&quot;: {</span></span>
<span class="line"><span>                    &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>                },</span></span>
<span class="line"><span>                &quot;StructuralEntityKeys&quot;: {</span></span>
<span class="line"><span>                    &quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>                    &quot;items&quot;: {</span></span>
<span class="line"><span>                        &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            },</span></span>
<span class="line"><span>            &quot;required&quot;: [</span></span>
<span class="line"><span>                &quot;Key&quot;,</span></span>
<span class="line"><span>                &quot;DisplayName&quot;,</span></span>
<span class="line"><span>                &quot;StructuralEntityKeys&quot;</span></span>
<span class="line"><span>            ]</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>Example</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;Groups&quot;: [</span></span>
<span class="line"><span>		{</span></span>
<span class="line"><span>			&quot;Key&quot;: &quot;admin&quot;,</span></span>
<span class="line"><span>			&quot;DisplayName&quot;: &quot;Admin&quot;,</span></span>
<span class="line"><span>			&quot;StructuralEntityKeys&quot;: [</span></span>
<span class="line"><span>				&quot;AAA&quot;,</span></span>
<span class="line"><span>				&quot;AAB&quot;,</span></span>
<span class="line"><span>				&quot;AAC&quot;</span></span>
<span class="line"><span>			]</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="previous-versions" tabindex="-1">Previous versions <a class="header-anchor" href="#previous-versions" aria-label="Permalink to &quot;Previous versions&quot;">​</a></h2><p>None</p>`,21),o=[e];function i(l,u,r,c,q,d){return a(),n("div",null,o)}const m=s(p,[["render",i]]);export{h as __pageData,m as default};
