import{_ as t,c as e,o as a,a4 as s}from"./chunks/framework.CgMb17D3.js";const b=JSON.parse('{"title":"Organisational Structure","description":"","frontmatter":{},"headers":[],"relativePath":"feature-guide/configuration/structure.md","filePath":"feature-guide/configuration/structure.md"}'),r={name:"feature-guide/configuration/structure.md"},i=s('<h1 id="organisational-structure" tabindex="-1">Organisational Structure <a class="header-anchor" href="#organisational-structure" aria-label="Permalink to &quot;Organisational Structure&quot;">​</a></h1><p>AireFrame allows you to represent your organisation&#39;s structure in the system. Subjects are assigned to structural entities which can be used to control access to data and to provide a hierarchy for the subjects.</p><h2 id="structure-types" tabindex="-1">Structure Types <a class="header-anchor" href="#structure-types" aria-label="Permalink to &quot;Structure Types&quot;">​</a></h2><p>Structure types define the different types of structural entities that you would like represent in your organisation structure. For example, this could be Department or Hospital.</p><p>This allows metadata to be shared between many structural entities of the same type. Currently you can set whether a structure type is subject assignable or not.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Changes to the structure type configuration do not affect the current data.</p><p>For example, if the structure type of a structural entity a subject is assigned to is changed to not be subject assignable, the subject is not removed from that structural entity</p></div><h2 id="structural-entities" tabindex="-1">Structural Entities <a class="header-anchor" href="#structural-entities" aria-label="Permalink to &quot;Structural Entities&quot;">​</a></h2><p>Structural entities make up the actual organisational structure that you see in AireFrame. It is a recursive structure so it is possible to have a deep nested structure of many different structure types, with user access control provided by the groups feature.</p><p>Subjects are assigned directly to structural entities, and a user will be able to see a subject if any of the groups they are in have access to the structural entity that the subject is assigned to.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Structural entities can only be deleted if they have no child structural entities and there are no subjects assigned to them</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If the parent of a strctural entity is changed, it will be removed from any groups that reference it.</p></div><h2 id="groups" tabindex="-1">Groups <a class="header-anchor" href="#groups" aria-label="Permalink to &quot;Groups&quot;">​</a></h2><p>Groups are a collection of structural entities that can be assigned to users to allow access to specific areas in your organisation, and the subjects that are assigned to those structural entities.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When creating or editing a group, all the parents of a structural entity must be selected for that entity to be accessible.</p><p>Therefore it is a good idea to assign your subjects at the lowest level possible so that the access control can be fine-grained</p></div><p>Groups are assinged to users induvidually on the user management page.</p>',15),o=[i];function u(c,n,l,p,d,h){return a(),e("div",null,o)}const g=t(r,[["render",u]]);export{b as __pageData,g as default};
