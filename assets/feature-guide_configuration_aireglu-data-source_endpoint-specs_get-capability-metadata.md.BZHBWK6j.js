import{_ as a,c as t,o as e,a5 as s}from"./chunks/framework.CPB9DHH7.js";const g=JSON.parse('{"title":"get-capability-metadata","description":"","frontmatter":{"next":{"text":"get-groups","link":"/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-groups"}},"headers":[],"relativePath":"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-capability-metadata.md","filePath":"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-capability-metadata.md"}'),n={name:"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-capability-metadata.md"},i=s(`<h1 id="get-capability-metadata" tabindex="-1">get-capability-metadata <a class="header-anchor" href="#get-capability-metadata" aria-label="Permalink to &quot;get-capability-metadata&quot;">​</a></h1><h2 id="specification-version" tabindex="-1">Specification Version <a class="header-anchor" href="#specification-version" aria-label="Permalink to &quot;Specification Version&quot;">​</a></h2><p>This endpoint is not versioned as it returns the version that all other endpoints must conform to. Any changes to this endpoint will be backwards compatible.</p><h2 id="context-and-rules" tabindex="-1">Context and rules <a class="header-anchor" href="#context-and-rules" aria-label="Permalink to &quot;Context and rules&quot;">​</a></h2><p>Must be implemented for all AireGlu data sources regardless of capability support. As per the schema below you must implement the <code>Capabilities</code> property, and may implement additional properties.</p><h2 id="endpoint-specification" tabindex="-1">Endpoint specification <a class="header-anchor" href="#endpoint-specification" aria-label="Permalink to &quot;Endpoint specification&quot;">​</a></h2><ul><li><strong>Name</strong>: <code>endpoint-prefix</code>-aireframe-get-capability-metadata</li><li><strong>Verb</strong>: GET</li><li><strong>Authentication</strong>: Client credentials</li></ul><h3 id="input" tabindex="-1">Input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;Input&quot;">​</a></h3><ul><li><strong>Format</strong>: None</li></ul><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-label="Permalink to &quot;Response&quot;">​</a></h3><ul><li><strong>Format</strong>: JSON</li><li><strong>Schema</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,</span></span>
<span class="line"><span>	&quot;title&quot;: &quot;get-capabilities-metadata-response&quot;,</span></span>
<span class="line"><span>	&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>	&quot;properties&quot;: {</span></span>
<span class="line"><span>		&quot;Capabilities&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>			&quot;items&quot;: {</span></span>
<span class="line"><span>				&quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span>				&quot;enum&quot;: [&quot;SubjectRead&quot;, &quot;StructuredData&quot;],</span></span>
<span class="line"><span>				&quot;uniqueItems&quot;: true</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>			&quot;minItems&quot;: 1</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		&quot;Version&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		&quot;CacheStructuredData&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;boolean&quot;</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	&quot;required&quot;: [</span></span>
<span class="line"><span>		&quot;Capabilities&quot;</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>Example</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;Capabilities&quot;: [&quot;SubjectRead&quot;, &quot;StructuredData&quot;],</span></span>
<span class="line"><span>	&quot;Version&quot;: &quot;2&quot;,</span></span>
<span class="line"><span>	&quot;CacheStructuredData&quot;: true</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>Explanation of properties</strong></li></ul><p><code>Capabilities</code>: Describes which capabilities this AireGlu data source provides, so that it is made available in the appropriate areas within AireFrame.The current available capabilities which you may choose to implement are <code>StructuredData</code> and <code>SubjectRead</code>.</p><p><code>Version</code>: Describes which version of the endpoint specifications you are implementing so that the return data can be appropriately deserialized in the event of changes within AireFrame. If the <code>Version</code> property is not provided the value will be read as <code>&quot;1&quot;</code>.</p><p><code>CacheStructuredData</code>: Indicates whether you would like structured data to be cached. If the <code>CacheStructuredData</code> property is not provided and you have implemented the StructuredData capability the value will be read as <code>true</code>. Where structured data is cached, you will need to use the <a href="/feature-guide/configuration/aireglu-data-source.html#managing-data">available methods</a> of refreshing the cache.</p>`,18),o=[i];function p(l,r,c,u,d,h){return e(),t("div",null,o)}const m=a(n,[["render",p]]);export{g as __pageData,m as default};
