import{_ as a,o as e,c as t,ag as s}from"./chunks/framework.uyO_piCG.js";const l="/assets/widgets.DcRYgeCA.png",k=JSON.parse('{"title":"Widgets","description":"","frontmatter":{},"headers":[],"relativePath":"feature-guide/configuration/widgets.md","filePath":"feature-guide/configuration/widgets.md","lastUpdated":1750706103000}'),n={name:"feature-guide/configuration/widgets.md"};function o(h,i,r,d,p,c){return e(),t("div",null,i[0]||(i[0]=[s('<h1 id="widgets" tabindex="-1">Widgets <a class="header-anchor" href="#widgets" aria-label="Permalink to &quot;Widgets&quot;">​</a></h1><p>Widgets are the main way to display data in AireFrame. This guide will cover how to create and configure widgets.</p><p><img src="'+l+`" alt="Example widget"></p><h2 id="data-pipelines" tabindex="-1">Data Pipelines <a class="header-anchor" href="#data-pipelines" aria-label="Permalink to &quot;Data Pipelines&quot;">​</a></h2><p>Data pipelines allow you to transform the data returned from a <a href="/feature-guide/configuration/data-sets.html">data set</a>.</p><p>A data set contains data points (i.e. rows) which contains data point items (i.e. column values). Fields (i.e. columns) are metadata about the data point items.</p><p>If the pipeline is valid, the output of the pipeline will be displayed as a preview.</p><p>The possible transformations are:</p><ul><li><a href="#filters">Filtering</a></li><li><a href="#mappers">Mapping</a></li><li><a href="#group">Grouping</a></li><li><a href="#aggregators">Aggregating</a></li></ul><h3 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h3><p>These are boolean <a href="/feature-guide/advanced/liquid.html">liquid</a> expressions that remove any data points which evaluate to false</p><div class="info custom-block"><p class="custom-block-title">Examples</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ numerical_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ string_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;some_value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><p>Things to note:</p><ul><li>If more than one filter is defined, these are applied as <code>AND</code> (i.e all filters must evaluate to true for the data point to be included)</li><li>Relative dates (<code>now</code>) and related filters (<code>age</code>) are not available</li></ul><h3 id="mappers" tabindex="-1">Mappers <a class="header-anchor" href="#mappers" aria-label="Permalink to &quot;Mappers&quot;">​</a></h3><p>These are <a href="/feature-guide/advanced/liquid.html">liquid</a> expressions that add a new item to each data point</p><p>Things to note:</p><ul><li>Mapping expressions cannot reference other mapped fields</li><li>The output datatype is inferred from the expression, however if the expression contains more than one statement it will always evaluate as a string</li><li>The output key must be unique amongst the initial and mapped fields</li><li>Liquid tags <code>capture</code>, <code>unless</code>, <code>case/when</code> are not currently supported</li><li>Relative dates (<code>now</code>) and related filters (<code>age</code>) are not available</li></ul><h3 id="group" tabindex="-1">Group <a class="header-anchor" href="#group" aria-label="Permalink to &quot;Group&quot;">​</a></h3><p>A group allows you to group the data points by the value of one or more items and apply aggregate transforms to that group</p><h3 id="aggregators" tabindex="-1">Aggregators <a class="header-anchor" href="#aggregators" aria-label="Permalink to &quot;Aggregators&quot;">​</a></h3><p>These are operators that aggregate the data points into a single* value</p><ul><li>Aggregators can operate over one or more fields (provided the data types are valid for that aggregate method)</li><li>The output key must be unique amongst the aggregated fields</li><li>(*) If an aggregator can return more than one value (currently <code>mode</code>, <code>minBy</code> and <code>maxBy</code>) only one aggregator is allowed</li><li>If aggregator the type <code>Liquid</code> is selected, a liquid expression can be furnished to operate over any one of the fields</li></ul><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ values | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">map:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;family_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">join:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;, &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div><h2 id="configuring-widgets" tabindex="-1">Configuring Widgets <a class="header-anchor" href="#configuring-widgets" aria-label="Permalink to &quot;Configuring Widgets&quot;">​</a></h2><p>When creating a widget, you must first select the type of widget you want to create. The available types are:</p><ul><li><b>Visualisation</b> - A visualisation based on a data set</li><li><b>IFrame</b> - An iframe that displays external content</li></ul><hr><h3 id="visualisations" tabindex="-1">Visualisations <a class="header-anchor" href="#visualisations" aria-label="Permalink to &quot;Visualisations&quot;">​</a></h3><p>The designer is split into two stages:</p><ol><li><a href="#design-the-visualisation">Design the visualisation</a></li><li><a href="#add-metadata">Add metadata</a></li></ol><h4 id="design-the-visualisation" tabindex="-1">Design the Visualisation <a class="header-anchor" href="#design-the-visualisation" aria-label="Permalink to &quot;Design the Visualisation&quot;">​</a></h4><p>First, choose your data pipeline. Next, choose how you want to display the data (The options will depend on the output of the pipeline).</p><p>The possible visualisations are:</p><ul><li><b>Table</b> -Always available</li><li><b>Graph</b> - Available for pipelines with at least one numerical or date output field</li><li><b>Pie Chart</b> - Available for pipelines with at least one numerical or date output field</li><li><b>WYSIWYG (HTML)</b> - Available for aggregated pipelines (except <code>mode</code>)</li></ul><p>Once you are happy with your visualisation click next to continue.</p><h5 id="table-graphs-and-pie-charts" tabindex="-1">Table, Graphs and Pie Charts <a class="header-anchor" href="#table-graphs-and-pie-charts" aria-label="Permalink to &quot;Table, Graphs and Pie Charts&quot;">​</a></h5><p>Drag and drop the series you wish to display on the visualisation.</p><p>The series display name can be customised, you can also use a liquid expression to create a dynamic name.</p><p>The display value can be formatted using a <a href="/feature-guide/advanced/liquid.html">liquid</a> expression e.g. <span><code>{{ value | round: 2 }}</code></span></p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Sorting and filters are applied on the actual value, not the display value.</p><p>If you want to filter or sort by a liquid formatted value, you can use a mapper in the pipeline to create a new field with the formatted value.</p></div><p>A hidden series will not be displayed in the visualisation but can be used to filter and sort the data.</p><h5 id="wysiwyg-html" tabindex="-1">WYSIWYG (HTML) <a class="header-anchor" href="#wysiwyg-html" aria-label="Permalink to &quot;WYSIWYG (HTML)&quot;">​</a></h5><p>The WYSIWYG editor allows you to create a custom HTML-based visualisation.</p><p>In order to display the data, you must use the <a href="/feature-guide/advanced/liquid.html">liquid</a> to reference the series by key. This will be replaced with the data when the visualisation is rendered.</p><p>In order to give you more fine-grained control over the visualisation, you may switch to the liquid editor by clicking the toggle in the top-right. This uses the Monaco editor to provide syntax highlighting and code completion.</p><p>The available HTML tags can be found in the <a href="/feature-guide/advanced/liquid.html#html-formatting">formatting guide</a>.</p><h4 id="add-metadata" tabindex="-1">Add metadata <a class="header-anchor" href="#add-metadata" aria-label="Permalink to &quot;Add metadata&quot;">​</a></h4><p>Finally set the title, default ordering, any default filters, and whether the widget should be available on the portal site.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The default order and direction are used when the visualisation is first loaded. The user can change this when viewing the visualisation.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Only widgets marked as <code>Use in portal</code> will be available for display on the portal site.</p><p>This cannot be changed once the visualisation is created.</p></div><h5 id="default-filters" tabindex="-1">Default Filters <a class="header-anchor" href="#default-filters" aria-label="Permalink to &quot;Default Filters&quot;">​</a></h5><p>Default filters allow you to define a filter that will be applied when the visualisation is first loaded. The users can change this filter when viewing the visualisation.</p><p>Filters are applied as <code>AND</code> (i.e all filters must evaluate to true for the data point to be included).</p><p>Filters are only available for visualisations based on cacheable data sets.</p><p>They are not available for WYSIWYG visualisations as they use a single data point.</p><hr><h3 id="iframes" tabindex="-1">IFrames <a class="header-anchor" href="#iframes" aria-label="Permalink to &quot;IFrames&quot;">​</a></h3><p>IFrame widgets allow you to embed external content into AireFrame. This can be useful for displaying content from other systems.</p><p>All iframe widgets must use a secure <code>https</code> URL.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The site must allow embedding. If the site does not allow embedding, the iframe will fail to load.</p></div><hr><h3 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h3><p>All widgets allow you to consume the context of the page they are displayed on. This allows you to create dynamic widgets that change based on the subject or structural entity being viewed.</p><p>The context is available as a liquid object that follows the structure:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tenant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;subject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;internalId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    [custom_field_key]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">custom_field_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">(for</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> each</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> subject</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> custom</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> field)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;structuralEntity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;structureType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">structure_type_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">       [custom_field_key]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">custom_field_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">(for</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> each</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> structure</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> custom</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> field)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">EXAMPLES</p><ul><li>Tenant key: <code>{{ tenant.key }}</code></li><li>Subject internalId: <code>{{ subject.internalId }}</code></li><li>Subject custom field value (where custom field key is name ): <code>{{ subject.name }}</code></li><li>Structural entity key: <code>{{ structuralEntity.key }}</code></li><li>Structural entity custom field value (where structure type is organisation and custom field key is name): <code>{{ structureType.organisation.name }}</code></li></ul></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The values available in the context depend on what section of the site the widget is being displayed on.</p><table tabindex="0"><thead><tr><th>Section</th><th>Available Context</th></tr></thead><tbody><tr><td>Location</td><td>Tenant, Structural Entity, Structure Type</td></tr><tr><td>Subject List</td><td>Tenant, Structural Entity, Structure Type, Subject</td></tr><tr><td>Subject Preview</td><td>Tenant, Subject</td></tr><tr><td>Subject Record</td><td>Tenant, Subject</td></tr><tr><td>Subject Portal</td><td>Tenant, Subject</td></tr></tbody></table><p>If you try to access a value that is not available in the context, an empty string will be returned.</p></div><h2 id="displaying-widgets" tabindex="-1">Displaying Widgets <a class="header-anchor" href="#displaying-widgets" aria-label="Permalink to &quot;Displaying Widgets&quot;">​</a></h2><h3 id="dashboards" tabindex="-1">Dashboards <a class="header-anchor" href="#dashboards" aria-label="Permalink to &quot;Dashboards&quot;">​</a></h3><p>In order to view a visualisation, it must be added to a dashboard. A dashboard is a collection of widgets that can be displayed on different sections of the site.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Only dashboards marked as <code>Use in portal</code> will be available for display on the portal site.</p><p>This cannot be changed once the dashboard is created.</p></div><h3 id="sections" tabindex="-1">Sections <a class="header-anchor" href="#sections" aria-label="Permalink to &quot;Sections&quot;">​</a></h3><p>The section configuration page allows you to set which dashboards should be shown on each section of the site.</p><p>The available sections are:</p><ul><li><strong>Location</strong> - This is where you see the widgets on the structural entity overview page. In this section, the widgets are populated with data for all subjects located within that structural entity and its children. <ul><li><em>Only visualisations based on cacheable data sets will be viewable in this section, a warning will be shown for non-cacheable visualisations</em></li></ul></li><li><strong>Subject List</strong> - This is where you see the data shown on the subject list alongside their id and name. <ul><li><em>In this section, only the first data point (according to the default ordering) for that subject is shown</em></li></ul></li><li><strong>Subject Record</strong> - This is where you see the widgets on the subject page with data only for that subject</li><li><strong>Subject Preview</strong> - This is where the subject information and widgets are shown on the right hand side as a preview, accessed by pressing <code>CTRL</code> while clicking on the subject from the subject lists.</li><li><strong>Subject Portal</strong> - This is what a subject will see when they log in to the portal, with data only about themselves.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can set which dashboard should be shown as the default for each section.</p><p>This is the dashboard that will be shown if the user has not previously selected a dashboard to show.</p></div>`,77)]))}const g=a(n,[["render",o]]);export{k as __pageData,g as default};
