import{_ as i,c as a,o as t,ah as s}from"./chunks/framework.BMM80GXQ.js";const u=JSON.parse('{"title":"Liquid","description":"","frontmatter":{"prev":false},"headers":[],"relativePath":"feature-guide/advanced/liquid.md","filePath":"feature-guide/advanced/liquid.md","lastUpdated":1758913759000}'),l={name:"feature-guide/advanced/liquid.md"};function d(o,e,n,c,h,r){return t(),a("div",null,[...e[0]||(e[0]=[s('<h1 id="liquid" tabindex="-1">Liquid <a class="header-anchor" href="#liquid" aria-label="Permalink to &quot;Liquid&quot;">​</a></h1><p>This page explains how to use the Liquid templating language in AireFrame.</p><p>The reference implementation is Shopify&#39;s Liquid. You can find the official documentation <a href="https://shopify.github.io/liquid/" target="_blank" rel="noreferrer">here</a>.</p><h2 id="custom-filters" tabindex="-1">Custom Filters <a class="header-anchor" href="#custom-filters" aria-label="Permalink to &quot;Custom Filters&quot;">​</a></h2><p>AireFrame offers a number of custom filters that can be used in Liquid templates to make common operations easier.</p><h3 id="age" tabindex="-1">Age <a class="header-anchor" href="#age" aria-label="Permalink to &quot;Age&quot;">​</a></h3><p>There is an age filter that can be used to calculate the age of a date/date time value.</p><p>It takes one argument specifying what unit should be used to calcualte the age, the options are:</p><ul><li><code>year</code></li><li><code>month</code></li><li><code>week</code></li><li><code>day</code></li><li><code>hour</code></li><li><code>minute</code></li></ul><div class="info custom-block"><p class="custom-block-title">Example</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ dateOfBirth | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">age:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;year&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><h3 id="plus-time" tabindex="-1">Plus Time <a class="header-anchor" href="#plus-time" aria-label="Permalink to &quot;Plus Time&quot;">​</a></h3><p>The plus time filter can be used to update a date/date time value. The possible arguments are: <code>months</code>, <code>weeks</code>, <code>days</code>, <code>hours</code> and <code>minutes</code>, and each argument should be followed by a number. At least one argument is required.</p><div class="info custom-block"><p class="custom-block-title">Example</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ date | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plus_time:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> months:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">weeks:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">days:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hours:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">minutes:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><h3 id="round-to-next" tabindex="-1">Round to next <a class="header-anchor" href="#round-to-next" aria-label="Permalink to &quot;Round to next&quot;">​</a></h3><p>There is an round to next filter that can be used to round a date/date time value according to the specified unit. The possible arguments are: <code>month</code>, <code>weekday</code>, <code>monday</code> to <code>sunday</code>, and <code>hour</code>.</p><div class="info custom-block"><p class="custom-block-title">Example</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ date | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">round_to_next:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;wednesday&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><h3 id="cui-datetime" tabindex="-1">CUI DateTime <a class="header-anchor" href="#cui-datetime" aria-label="Permalink to &quot;CUI DateTime&quot;">​</a></h3><p>There is an CUI DateTime filter that can be used to format a date time value into a CUI date time string (<code>dd-mmm-yyyy HH:MM</code>)</p><div class="info custom-block"><p class="custom-block-title">Example</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ date | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cui_date_time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><h4 id="cui-date" tabindex="-1">CUI Date <a class="header-anchor" href="#cui-date" aria-label="Permalink to &quot;CUI Date&quot;">​</a></h4><p>There is an CUI Date filter that can be used to format a date or date time value into a CUI date string (<code>dd-mmm-yyyy</code>)</p><div class="info custom-block"><p class="custom-block-title">Example</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ date | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cui_date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><h3 id="cui-time" tabindex="-1">CUI Time <a class="header-anchor" href="#cui-time" aria-label="Permalink to &quot;CUI Time&quot;">​</a></h3><p>There is an CUI Time filter that can be used to format a time or date time value into a CUI time string (<code>HH:MM</code>)</p><div class="info custom-block"><p class="custom-block-title">Example</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ time | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cui_time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div></div><h2 id="html-formatting" tabindex="-1">HTML Formatting <a class="header-anchor" href="#html-formatting" aria-label="Permalink to &quot;HTML Formatting&quot;">​</a></h2><p>Liquid expressions allow you to pass HTML content to be rendered. This is useful for rendering rich text content.</p><p>The allowed HTML tags are:</p><ul><li><code>&lt;a /&gt;</code></li><li><code>&lt;b /&gt;</code></li><li><code>&lt;strong /&gt;</code></li><li><code>&lt;em /&gt;</code></li><li><code>&lt;i /&gt;</code></li><li><code>&lt;small /&gt;</code></li><li><code>&lt;sub /&gt;</code></li><li><code>&lt;sup /&gt;</code></li><li><code>&lt;br /&gt;</code></li><li><code>&lt;span /&gt;</code> - The <code>title</code> and <code>style</code> attributes are allowed on the span tag. The allowed css properties are: <ul><li><code>background-color</code></li><li><code>border</code></li><li><code>border-radius</code></li><li><code>color</code></li><li><code>display</code> (only <code>inline</code>, <code>inline-block</code> and <code>block</code> are allowed)</li><li><code>font-weight</code></li><li><code>font-size</code></li><li><code>letter-spacing</code></li><li><code>min-width</code></li><li><code>padding</code></li><li><code>text-align</code></li><li><code>text-decoration</code></li><li><code>text-shadow</code></li><li><code>text-transform</code></li><li><code>text-emphasis</code></li></ul></li></ul><p>You can also use any UTF-8 icons in the content. See <a href="https://utf8-icons.com/" target="_blank" rel="noreferrer">here</a> for the available icons.</p>',30)])])}const k=i(l,[["render",d]]);export{u as __pageData,k as default};
