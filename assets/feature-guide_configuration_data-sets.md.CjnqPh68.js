import{_ as e,c as a,o,ah as d}from"./chunks/framework.BMM80GXQ.js";const p=JSON.parse('{"title":"Data Sets","description":"","frontmatter":{},"headers":[],"relativePath":"feature-guide/configuration/data-sets.md","filePath":"feature-guide/configuration/data-sets.md","lastUpdated":1758913759000}'),i={name:"feature-guide/configuration/data-sets.md"};function s(r,t,l,u,n,c){return o(),a("div",null,[...t[0]||(t[0]=[d('<h1 id="data-sets" tabindex="-1">Data Sets <a class="header-anchor" href="#data-sets" aria-label="Permalink to &quot;Data Sets&quot;">​</a></h1><p>Data sets define the data that can be presented in visualisations within AireFrame. This page describes the different types of data sets and how to create them.</p><p>Once you have created a data set, they can be used within data pipelines which form the basis of visualisations.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>A data set cannot be edited once it has been created. If you need to make changes, you will need to create a new data set.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Data sets can only be deleted if they are not being used by any data pipelines, or composite data sets.</p></div><h2 id="source-data-sets" tabindex="-1">Source Data Sets <a class="header-anchor" href="#source-data-sets" aria-label="Permalink to &quot;Source Data Sets&quot;">​</a></h2><p>A source data set defines data that is extracted directly from a data source.</p><p>To create a data extract, you must provide a JSON definition that describes the data you want to extract. This is specific to the data source you are using. More information about the definitions for the bundled data source definitions are available:</p><ul><li><a href="/feature-guide/advanced/data-extracts/internal.html">AireFrame (Internal)</a></li><li><a href="/feature-guide/advanced/data-extracts/aireforms.html">AireForms</a></li><li><a href="/feature-guide/advanced/data-extracts/aireflow.html">AireFlow</a></li><li><a href="/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-dataset-options-schema.html">AireGlu</a> - <i>JSON definition is determined by the schema returned from this user-configured endpoint</i></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>AireFrame uses the Monaco editor to provide syntax highlighting and code completion.</p><p>Use the keyboard shortcut <code>Ctrl + Space</code> to bring up the code completion menu.</p></div><h4 id="subject-identifier" tabindex="-1">Subject Identifier <a class="header-anchor" href="#subject-identifier" aria-label="Permalink to &quot;Subject Identifier&quot;">​</a></h4><p>For some data sources you will need to specify what subject identifier should be passed down to the data source to extract the data.</p><p>The options are:</p><ul><li><b>Internal</b> - AireFrame&#39;s internal UUID-based identifier</li><li><b>External</b> - The identifier received from the <a href="/feature-guide/configuration/subject.html#subject-provider">subject provider</a></li><li><b>Custom Field</b> - Any required custom field (configurable on the <a href="/feature-guide/configuration/subject.html#custom-fields">subject configuration page</a>).</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you use a custom field as the subject identifier, you must ensure that the field is populated for the subject(s) being viewed. An error will occur if the field is not populated.</p></div><h2 id="composite-data-sets" tabindex="-1">Composite Data Sets <a class="header-anchor" href="#composite-data-sets" aria-label="Permalink to &quot;Composite Data Sets&quot;">​</a></h2><p>A composite data set allows you to combine data from multiple source data sets into a single data set. This is useful when you want to create visualisations over data from multiple sources.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Composite data sets can only be created from cacheable source data sets.</p></div><p>It is important to note that no ordering is applied to the data points in a composite data set. The displayed order is determined by the visualisation configuration that uses the data set.</p><h3 id="stacked-data-sets" tabindex="-1">Stacked Data Sets <a class="header-anchor" href="#stacked-data-sets" aria-label="Permalink to &quot;Stacked Data Sets&quot;">​</a></h3><p>A stacked data set combines multiple data sets by &#39;stacking&#39; the data points on top of each other.</p><p>To do this you define stacked fields, which contain one or more related fields from the source data sets. All fields within a stacked field must have the same data type.</p><div class="info custom-block"><p class="custom-block-title">Example</p><p>Given these two data sets:</p><table tabindex="0"><thead><tr><th>A1</th><th>A2</th></tr></thead><tbody><tr><td>1</td><td>&quot;A&quot;</td></tr><tr><td>2</td><td>&quot;B&quot;</td></tr></tbody></table><table tabindex="0"><thead><tr><th>B1</th><th>B2</th></tr></thead><tbody><tr><td>101</td><td>&quot;Y&quot;</td></tr><tr><td>102</td><td>&quot;Z&quot;</td></tr></tbody></table><p>We define two stacked fields:</p><ul><li><code>Field 1</code> with fields <code>A1</code>, <code>B1</code></li><li><code>Field 2</code> with fields <code>A2</code>, <code>B2</code></li></ul><p>We would get the following stacked data set:</p><table tabindex="0"><thead><tr><th>Field 1</th><th>Field 2</th></tr></thead><tbody><tr><td>1</td><td>&quot;A&quot;</td></tr><tr><td>2</td><td>&quot;B&quot;</td></tr><tr><td>101</td><td>&quot;Y&quot;</td></tr><tr><td>102</td><td>&quot;Z&quot;</td></tr></tbody></table></div><h3 id="linked-data-sets" tabindex="-1">Linked Data Sets <a class="header-anchor" href="#linked-data-sets" aria-label="Permalink to &quot;Linked Data Sets&quot;">​</a></h3><p>A linked data set allows you to link related data points across multiple data sets. For example, you may want to show information about a form submission alongside a task for that form submission.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Data points are always linked by subject, it is not possible to link data points across subjects.</p></div><p>To do this you must define a pipeline for each source data set. There are a few requirements for the pipeline:</p><ul><li>Each pipeline must contain at least one aggregator to ensure only a single data point is returned from each source data set for linking.</li><li>Each pipeline must return a unique set of field keys to ensure there is no overlap between the data points returned from each source data set. <ul><li>All output field keys are prefixed with the source data set key</li></ul></li></ul><div class="info custom-block"><p class="custom-block-title">Example</p><p>Given these two data sets:</p><p><b>A</b></p><table tabindex="0"><thead><tr><th>1</th><th>2</th></tr></thead><tbody><tr><td>1</td><td>&quot;A&quot;</td></tr><tr><td>2</td><td>&quot;B&quot;</td></tr></tbody></table><p><b>B</b></p><table tabindex="0"><thead><tr><th>1</th><th>2</th></tr></thead><tbody><tr><td>101</td><td>&quot;Y&quot;</td></tr><tr><td>102</td><td>&quot;Z&quot;</td></tr></tbody></table><p>We define a pipeline for each data set:</p><ul><li>For data set A, we use the max by aggregator based on column <code>1</code></li><li>For data set B, we use the min by aggregator based on column <code>1</code></li></ul><p>We would get the following linked data set:</p><table tabindex="0"><thead><tr><th>A_1</th><th>A_2</th><th>B_1</th><th>B_2</th></tr></thead><tbody><tr><td>2</td><td>&quot;B&quot;</td><td>101</td><td>&quot;Y&quot;</td></tr></tbody></table></div><p>There is a further option to group by correlation id. For this to work correctly, the correlation ids must match across the data sets.</p><div class="info custom-block"><p class="custom-block-title">Correlation Id Grouping Example</p><p>Given these two data sets:</p><p><b>A</b></p><table tabindex="0"><thead><tr><th>Correlation Id</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>&quot;c1&quot;</td><td>1</td><td>&quot;A&quot;</td></tr><tr><td>&quot;c2&quot;</td><td>2</td><td>&quot;B&quot;</td></tr></tbody></table><p><b>B</b></p><table tabindex="0"><thead><tr><th>Correlation Id</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>&quot;c1&quot;</td><td>101</td><td>&quot;Y&quot;</td></tr><tr><td>&quot;c1&quot;</td><td>102</td><td>&quot;Z&quot;</td></tr><tr><td>&quot;c2&quot;</td><td>102</td><td>&quot;Z&quot;</td></tr></tbody></table><p>We define a pipeline for each data set:</p><ul><li>For data set A, we use the max by aggregator based on column <code>1</code></li><li>For data set B, we use the min by aggregator based on column <code>1</code></li></ul><p>We would get the following linked data set:</p><table tabindex="0"><thead><tr><th>Correlation Id</th><th>A_1</th><th>A_2</th><th>B_1</th><th>B_2</th></tr></thead><tbody><tr><td>&quot;c1&quot;</td><td>1</td><td>&quot;A&quot;</td><td>101</td><td>&quot;Y&quot;</td></tr><tr><td>&quot;c2&quot;</td><td>2</td><td>&quot;B&quot;</td><td>102</td><td>&quot;Z&quot;</td></tr></tbody></table></div>',31)])])}const b=e(i,[["render",s]]);export{p as __pageData,b as default};
