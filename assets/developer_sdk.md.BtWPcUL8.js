import{_ as s,c as e,o as i,ah as n}from"./chunks/framework.BwFTqLo3.js";const u=JSON.parse('{"title":"AireFrame SDK","description":"","frontmatter":{},"headers":[],"relativePath":"developer/sdk.md","filePath":"developer/sdk.md","lastUpdated":1758213158000}'),t={name:"developer/sdk.md"};function p(r,a,l,o,d,c){return i(),e("div",null,[...a[0]||(a[0]=[n(`<h1 id="aireframe-sdk" tabindex="-1">AireFrame SDK <a class="header-anchor" href="#aireframe-sdk" aria-label="Permalink to &quot;AireFrame SDK&quot;">​</a></h1><p>We publish a <em>C# ASP.Net Core</em> SDK that can be used to integrate AireFrame with custom data sources.</p><p>Currently the SDK supports <em>.NET 8</em> upwards.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>The SDK is published to a custom AzureDevops package feed. To access it you need to add a <em>NuGet.config</em> file to your project with the following:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span>&lt;configuration&gt;</span></span>
<span class="line"><span>  &lt;packageSources&gt;</span></span>
<span class="line"><span>    &lt;add key=&quot;AireFrame&quot; value=&quot;https://pkgs.dev.azure.com/AireLogic/Public/_packaging/AireFrame/nuget/v3/index.json&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/packageSources&gt;</span></span>
<span class="line"><span>&lt;/configuration&gt;</span></span></code></pre></div><p>Then install the package into your project.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Install-Package AireLogic.AireFrame.DataProviderSdk</span></span></code></pre></div><p>Or:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dotnet add package AireLogic.AireFrame.DataProviderSdk</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>These are the interfaces you can implement:</p><ul><li><code>ISubjectProvider</code>, <code>ISubjectLocationProvider</code>, <code>IStructureTypeProvider</code>, <code>IStructuralEntityProvider</code>, <code>IGroupProvider</code> (or their read-only counterparts)</li><li><code>IStructuredDataProvider</code></li></ul><p>In <code>Startup.ConfigureServices</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>services</span></span>
<span class="line"><span>    .AddDataProviderServer&lt;YourDataSource&gt;(</span></span>
<span class="line"><span>        new DataProviderServerSettings(</span></span>
<span class="line"><span>            new AuthOptions(</span></span>
<span class="line"><span>                AUTHORITY_HOST,</span></span>
<span class="line"><span>                ISSUER_HOST,</span></span>
<span class="line"><span>                AUDIENCE)</span></span>
<span class="line"><span>        )</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>    .AddSubjectProvider&lt;YourSubjectProviderImplementation, YourSubjectLocationProviderImplementation, YourStructureTypeProvider, YourStructuralEntityProvider, YourGroupProvider&gt;() // Or .AddReadOnlySubjectProvider</span></span>
<span class="line"><span>    .AddStructuredDataProvider&lt;YourStructuredDataProviderImplementation&gt;(o =&gt; {</span></span>
<span class="line"><span>        // This adds the IDataChangeNotificationClient which enables caching of structured data</span></span>
<span class="line"><span>        options.ServerConfiguration = new AireFrameServerConfiguration(GrpcEndpoint, ClientCredentials);</span></span>
<span class="line"><span>    });</span></span></code></pre></div><p>In <code>Startup.Configure</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>app.UseDataProviderServer();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>..</span></span>
<span class="line"><span></span></span>
<span class="line"><span>app.UseEndpoints(endpoints =&gt;</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    endpoints.MapDataProvider();</span></span>
<span class="line"><span>});</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Our Data Provider SDK supports configuring data sources with distinct read-only and read-write capabilities. This allows you to tailor the behavior based on runtime conditions.</p><ul><li>Read-Only Capabilities: For scenarios where data modification is not required or should be restricted. Use <code>ReadOnlySubjectProviderOptions</code> to configure data sources that should only support read operations.</li><li>Read-Write Capabilities: Use <code>ReadWriteSubjectProviderOptions</code> for data sources that require both read and write operations. These options also support dynamically setting the data source to read-only mode based on runtime conditions.</li></ul><p>In <code>Startup.ConfigureServices</code>:</p><ol><li>Define Read-Write Capabilities</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>services</span></span>
<span class="line"><span>    .AddDataProviderServer&lt;YourDataSource&gt;(</span></span>
<span class="line"><span>        // Configuration settings</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>    .AddSubjectProvider&lt;YourSubjectProviderImplementation, YourSubjectLocationProviderImplementation&gt;(options =&gt; {</span></span>
<span class="line"><span>      options.Lifetime = ServiceLifetime.Scoped;</span></span>
<span class="line"><span>      // Configure dynamic read-only check</span></span>
<span class="line"><span>      options.IsReadOnly = (serviceProvider, dataSourceContext) =&gt; {</span></span>
<span class="line"><span>          // Insert logic to determine if the provider should be read-only</span></span>
<span class="line"><span>          return Task.FromResult(false); // Example: dynamically determine based on context</span></span>
<span class="line"><span>      };</span></span>
<span class="line"><span>    })</span></span>
<span class="line"><span>    .AddStructuredDataProvider&lt;YourStructuredDataProviderImplementation&gt;()</span></span>
<span class="line"><span>    .AddEventHandler&lt;YourEventHandlerImplementation&gt;();</span></span></code></pre></div><ol start="2"><li>Define Read-Only Capabilities</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>services.AddDataProviderServer&lt;YourDataSource&gt;(config =&gt; {</span></span>
<span class="line"><span>    // Configuration settings</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>.AddReadOnlySubjectProvider&lt;ReadOnlySubjectProvider, ReadOnlySubjectLocationProvider&gt;(options =&gt; {</span></span>
<span class="line"><span>    options.Lifetime = ServiceLifetime.Scoped;</span></span>
<span class="line"><span>    // Read-only options do not require IsReadOnly configuration</span></span>
<span class="line"><span>});</span></span></code></pre></div><h2 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-label="Permalink to &quot;Authentication&quot;">​</a></h2><p>To setup authentication for your service you need to create an client and a scope on the authority server that AireFrame is using. For cloud-hosted AireFrame production this is <a href="https://identity.aireinnovate.com" target="_blank" rel="noreferrer">AireIdentity</a></p><p>This address is what you need to provide for both the <code>AUTHORITY_HOST</code> and <code>ISSUER_HOST</code> values. The scope you created will be the <code>AUDIENCE</code> value.</p><h3 id="storage-libraries" tabindex="-1">Storage Libraries <a class="header-anchor" href="#storage-libraries" aria-label="Permalink to &quot;Storage Libraries&quot;">​</a></h3><p>In order to make it easier to implement the SDK we have created a storage library that can be used to store data in a Postgres. This is available as NuGet package <code>AireLogic.AireFrame.DataProvider.Storage.PostgreSql</code>.</p><p>To use this add the following to your DbContext:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnModelCreating</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ModelBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> modelBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modelBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddDataProviderEntities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>And register the services:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddDataProviderPostgresStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetRequiredService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DbContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;());</span></span></code></pre></div><h3 id="code-generation-library" tabindex="-1">Code Generation Library <a class="header-anchor" href="#code-generation-library" aria-label="Permalink to &quot;Code Generation Library&quot;">​</a></h3><p>We have also created a code generation library that can be used to generate the boilerplate code for the SDK. This is available as NuGet package <code>AireLogic.AireFrame.DataProviderSdk.Analyzers</code>.</p><p>To use this library, add the package to your csproj:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;AireLogic.AireFrame.DataProviderSdk.Analyzers&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;..&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">PrivateAssets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;all&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">PrivateAssets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">IncludeAssets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;runtime; build; native; contentfiles; analyzers; buildtransitive&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">IncludeAssets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">PackageReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When one or more <code>[DataPointItem(&quot;key&quot;)]</code> attributes are added to members on a partial class, the library will automatically generate a <code>GetDataPointItems</code> method on that class that will convert the members to <code>DataPointItems</code>.</p>`,39)])])}const g=s(t,[["render",p]]);export{u as __pageData,g as default};
