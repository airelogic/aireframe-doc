import{_ as t,c as s,o as n,a5 as a}from"./chunks/framework.IdkiGMKn.js";const h=JSON.parse('{"title":"get-data-points","description":"","frontmatter":{"next":{"text":"get-dataset-options-schema","link":"/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-dataset-options-schema"}},"headers":[],"relativePath":"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-data-points.md","filePath":"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-data-points.md"}'),p={name:"feature-guide/configuration/aireglu-data-source/endpoint-specs/get-data-points.md"},e=a(`<h1 id="get-data-points" tabindex="-1">get-data-points <a class="header-anchor" href="#get-data-points" aria-label="Permalink to &quot;get-data-points&quot;">​</a></h1><h2 id="specification-version" tabindex="-1">Specification Version <a class="header-anchor" href="#specification-version" aria-label="Permalink to &quot;Specification Version&quot;">​</a></h2><p>Version: <code>&quot;1&quot;</code></p><h2 id="context-and-rules" tabindex="-1">Context and rules <a class="header-anchor" href="#context-and-rules" aria-label="Permalink to &quot;Context and rules&quot;">​</a></h2><p>Required for the <code>StructuredData</code> capability.</p><p>Called when a visualisation is loaded, to get the data which is displayed in the visualisation.</p><p>Which data is returned may depend upon the options the user has chosen for the underlying dataset. These options are passed in as input to this endpoint under DataExtract.Options. The structure of these options is determined by the schema returned from the endpoint <a href="/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-dataset-options-schema.html"><code>endpoint-prefix</code>-aireframe-get-dataset-options-schema</a>.</p><h2 id="endpoint-specification" tabindex="-1">Endpoint specification <a class="header-anchor" href="#endpoint-specification" aria-label="Permalink to &quot;Endpoint specification&quot;">​</a></h2><ul><li><strong>Name</strong>: <code>endpoint-prefix</code>-aireframe-get-data-points</li><li><strong>Verb</strong>: POST</li><li><strong>Authentication</strong>: Client credentials</li></ul><h3 id="input" tabindex="-1">Input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;Input&quot;">​</a></h3><ul><li><strong>Format</strong>: JSON</li><li><strong>Schema</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,</span></span>
<span class="line"><span>	&quot;title&quot;: &quot;get-data-points-input&quot;,</span></span>
<span class="line"><span>	&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>	&quot;properties&quot;: {</span></span>
<span class="line"><span>		&quot;SubjectIdentifiers&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>			&quot;items&quot;: {</span></span>
<span class="line"><span>				&quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>			}</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		&quot;PagingRequest&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>			&quot;properties&quot;: {</span></span>
<span class="line"><span>				&quot;After&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;],</span></span>
<span class="line"><span>					&quot;description&quot;: &quot;Request items after the node with provided cursor&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>            	&quot;Before&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;],</span></span>
<span class="line"><span>          			&quot;description&quot;: &quot;Request items before the node with provided cursor&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>            	&quot;First&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;integer&quot;, &quot;null&quot;],</span></span>
<span class="line"><span>          			&quot;description&quot;: &quot;Request the first x items&quot;,</span></span>
<span class="line"><span>					&quot;format&quot;: &quot;int32&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>            	&quot;Last&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;integer&quot;, &quot;null&quot;],</span></span>
<span class="line"><span>          			&quot;description&quot;: &quot;Request the last x items.&quot;,</span></span>
<span class="line"><span>					&quot;format&quot;: &quot;int32&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>            	&quot;OrderBy&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;],</span></span>
<span class="line"><span>          			&quot;description&quot;: &quot;Gets the key of the field to order by.&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>				&quot;OrderDirection&quot;: {</span></span>
<span class="line"><span>					&quot;description&quot;: &quot;Gets the direction to order by.&quot;,</span></span>
<span class="line"><span>					&quot;oneOf&quot;: [</span></span>
<span class="line"><span>						{</span></span>
<span class="line"><span>							&quot;type&quot;: &quot;null&quot;</span></span>
<span class="line"><span>						},</span></span>
<span class="line"><span>						{</span></span>
<span class="line"><span>							&quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span>							&quot;enum&quot;:	[&quot;Ascending&quot;, &quot;Descending&quot;]</span></span>
<span class="line"><span>						}</span></span>
<span class="line"><span>					]</span></span>
<span class="line"><span>				}</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>			&quot;required&quot;: [</span></span>
<span class="line"><span>				&quot;After&quot;,</span></span>
<span class="line"><span>				&quot;Before&quot;,</span></span>
<span class="line"><span>				&quot;First&quot;,</span></span>
<span class="line"><span>				&quot;Last&quot;,</span></span>
<span class="line"><span>				&quot;OrderBy&quot;,</span></span>
<span class="line"><span>				&quot;OrderDirection&quot;</span></span>
<span class="line"><span>			]</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		&quot;DataExtract&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>			&quot;properties&quot;: {</span></span>
<span class="line"><span>			    &quot;Key&quot;:{</span></span>
<span class="line"><span>			        &quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>			    },</span></span>
<span class="line"><span>			    &quot;Options&quot;: {</span></span>
<span class="line"><span>			        &quot;type&quot;: &quot;object&quot;	    		</span></span>
<span class="line"><span>			    }</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>			&quot;required&quot;: [</span></span>
<span class="line"><span>				&quot;Key&quot;,</span></span>
<span class="line"><span>				&quot;Options&quot;</span></span>
<span class="line"><span>			]</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	&quot;required&quot;: [</span></span>
<span class="line"><span>		&quot;SubjectIdentifiers&quot;,</span></span>
<span class="line"><span>		&quot;PagingRequest&quot;,</span></span>
<span class="line"><span>		&quot;DataExtract&quot;</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>Example</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;SubjectIdentifiers&quot;: [</span></span>
<span class="line"><span>		&quot;subj-123&quot;,</span></span>
<span class="line"><span>		&quot;subj-456&quot;</span></span>
<span class="line"><span>	],</span></span>
<span class="line"><span>	&quot;PagingRequest&quot;: {</span></span>
<span class="line"><span>		&quot;After&quot;: null,</span></span>
<span class="line"><span>		&quot;Before&quot;: null,</span></span>
<span class="line"><span>		&quot;First&quot;: 10,</span></span>
<span class="line"><span>		&quot;Last&quot;: null,</span></span>
<span class="line"><span>		&quot;OrderBy&quot;: null,</span></span>
<span class="line"><span>		&quot;OrderDirection&quot;: &quot;Ascending&quot;</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	&quot;DataExtract&quot;: {</span></span>
<span class="line"><span>		&quot;Key&quot;: &quot;sales-data-extract&quot;,</span></span>
<span class="line"><span>		&quot;Options&quot;: {</span></span>
<span class="line"><span>			&quot;info-type&quot;: &quot;sales&quot;</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>Explanation of properties</strong>: Any object can be passed in to the DataExtract Options property that meets the schema returned by the endpoint <a href="/feature-guide/configuration/aireglu-data-source/endpoint-specs/get-dataset-options-schema.html"><code>endpoint-prefix</code>-aireframe-get-dataset-options-schema</a>. You may then use these options to determine what data to return.</li></ul><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-label="Permalink to &quot;Response&quot;">​</a></h3><ul><li><strong>Format</strong>: JSON</li><li><strong>Schema</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,</span></span>
<span class="line"><span>	&quot;title&quot;: &quot;get-data-points-response&quot;,</span></span>
<span class="line"><span>	&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>	&quot;properties&quot;: {</span></span>
<span class="line"><span>		&quot;PageInfo&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>			&quot;properties&quot;: {</span></span>
<span class="line"><span>				&quot;HasNextPage&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: &quot;boolean&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>				&quot;HasPreviousPage&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: &quot;boolean&quot;</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>				&quot;StartCursor&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;null&quot;, &quot;string&quot;]</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>				&quot;EndCursor&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: [&quot;null&quot;, &quot;string&quot;],</span></span>
<span class="line"><span>					&quot;minLength&quot;: 1</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>				&quot;TotalCount&quot;: {</span></span>
<span class="line"><span>					&quot;type&quot;: &quot;integer&quot;,</span></span>
<span class="line"><span>					&quot;format&quot;: &quot;int32&quot;</span></span>
<span class="line"><span>				}</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>			&quot;required&quot;: [</span></span>
<span class="line"><span>				&quot;HasNextPage&quot;,</span></span>
<span class="line"><span>				&quot;HasPreviousPage&quot;,</span></span>
<span class="line"><span>				&quot;StartCursor&quot;,</span></span>
<span class="line"><span>				&quot;EndCursor&quot;,</span></span>
<span class="line"><span>				&quot;TotalCount&quot;</span></span>
<span class="line"><span>			]</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		&quot;Edges&quot;: {</span></span>
<span class="line"><span>			&quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>			&quot;items&quot;: {</span></span>
<span class="line"><span>				&quot;required&quot;: [</span></span>
<span class="line"><span>					&quot;Node&quot;,</span></span>
<span class="line"><span>					&quot;Cursor&quot;					</span></span>
<span class="line"><span>				],</span></span>
<span class="line"><span>				&quot;properties&quot;: {</span></span>
<span class="line"><span>					&quot;Node&quot;: {</span></span>
<span class="line"><span>						&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>      					&quot;description&quot;: &quot;A collection of DataPointItems relating to a single point (e.g. time) for a single subject&quot;,</span></span>
<span class="line"><span>						&quot;properties&quot;: {</span></span>
<span class="line"><span>							&quot;Id&quot;: {</span></span>
<span class="line"><span>								&quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>							},</span></span>
<span class="line"><span>							&quot;SubjectIdentifier&quot;: {</span></span>
<span class="line"><span>								&quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span>          						&quot;description&quot;: &quot;The SubjectIdentifier that this Node refers to&quot;</span></span>
<span class="line"><span>							},</span></span>
<span class="line"><span>							&quot;DataPointItems&quot;: {</span></span>
<span class="line"><span>								&quot;type&quot;: &quot;array&quot;,</span></span>
<span class="line"><span>								&quot;items&quot;: {</span></span>
<span class="line"><span>									&quot;description&quot;: &quot;A single data value&quot;,</span></span>
<span class="line"><span>									&quot;required&quot;: [</span></span>
<span class="line"><span>										&quot;Key&quot;,</span></span>
<span class="line"><span>										&quot;Value&quot;</span></span>
<span class="line"><span>									],</span></span>
<span class="line"><span>									&quot;properties&quot;: {</span></span>
<span class="line"><span>										&quot;Key&quot;: {</span></span>
<span class="line"><span>											&quot;type&quot;: &quot;string&quot;</span></span>
<span class="line"><span>										},</span></span>
<span class="line"><span>										&quot;Value&quot;: {</span></span>
<span class="line"><span>											&quot;type&quot;: &quot;object&quot;,</span></span>
<span class="line"><span>											&quot;properties&quot;: {</span></span>
<span class="line"><span>												&quot;DataType&quot;: {</span></span>
<span class="line"><span>													&quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span>													&quot;enum&quot;: [</span></span>
<span class="line"><span>														&quot;String&quot;,</span></span>
<span class="line"><span>														&quot;Decimal&quot;,</span></span>
<span class="line"><span>														&quot;Integer&quot;,</span></span>
<span class="line"><span>														&quot;DateTime&quot;,</span></span>
<span class="line"><span>														&quot;Date&quot;,</span></span>
<span class="line"><span>														&quot;Time&quot;,</span></span>
<span class="line"><span>														&quot;Boolean&quot;</span></span>
<span class="line"><span>													]</span></span>
<span class="line"><span>												},</span></span>
<span class="line"><span>												&quot;Value&quot;: {</span></span>
<span class="line"><span>													&quot;type&quot;: [</span></span>
<span class="line"><span>														&quot;string&quot;,</span></span>
<span class="line"><span>														&quot;integer&quot;,</span></span>
<span class="line"><span>														&quot;number&quot;,</span></span>
<span class="line"><span>														&quot;boolean&quot;,</span></span>
<span class="line"><span>														&quot;null&quot;</span></span>
<span class="line"><span>													]</span></span>
<span class="line"><span>												}</span></span>
<span class="line"><span>											},</span></span>
<span class="line"><span>											&quot;required&quot;: [</span></span>
<span class="line"><span>												&quot;DataType&quot;,</span></span>
<span class="line"><span>												&quot;Value&quot;</span></span>
<span class="line"><span>											]</span></span>
<span class="line"><span>										}</span></span>
<span class="line"><span>									}</span></span>
<span class="line"><span>								}</span></span>
<span class="line"><span>							}</span></span>
<span class="line"><span>						},</span></span>
<span class="line"><span>						&quot;required&quot;: [</span></span>
<span class="line"><span>							&quot;Id&quot;,</span></span>
<span class="line"><span>							&quot;SubjectIdentifier&quot;,</span></span>
<span class="line"><span>							&quot;DataPointItems&quot;</span></span>
<span class="line"><span>						]</span></span>
<span class="line"><span>					},</span></span>
<span class="line"><span>					&quot;Cursor&quot;: {</span></span>
<span class="line"><span>						&quot;type&quot;: &quot;string&quot;,</span></span>
<span class="line"><span>          				&quot;description&quot;: &quot;Gets a unique identifier for this node.&quot;</span></span>
<span class="line"><span>					}</span></span>
<span class="line"><span>				}</span></span>
<span class="line"><span>			}</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	&quot;required&quot;: [</span></span>
<span class="line"><span>		&quot;PageInfo&quot;,</span></span>
<span class="line"><span>		&quot;Edges&quot;</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><p><strong>Additional Notes</strong> Depending on the DataType of a Value, the Value should be returned as the following C# type</p><ul><li><em>String</em> - null or string</li><li><em>Decimal</em> - null or double</li><li><em>Integer</em> - null or int</li><li><em>DateTime</em> - null or string as DateTime format <code>O</code></li><li><em>Date</em> - null or string as DateOnly format <code>yyyy-MM-dd</code></li><li><em>Time</em> - null or string as TimeOnly format <code>HH:mm:ss</code></li><li><em>Boolean</em> - null or bool</li></ul></li><li><p><strong>Example</strong></p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>	&quot;PageInfo&quot;: {</span></span>
<span class="line"><span>		&quot;HasNextPage&quot;: false,</span></span>
<span class="line"><span>		&quot;HasPreviousPage&quot;: false,</span></span>
<span class="line"><span>		&quot;StartCursor&quot;: &quot;1&quot;,</span></span>
<span class="line"><span>		&quot;EndCursor&quot;: &quot;1&quot;,</span></span>
<span class="line"><span>		&quot;TotalCount&quot;: 1</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	&quot;Edges&quot;: [</span></span>
<span class="line"><span>		{</span></span>
<span class="line"><span>			&quot;Node&quot;: {</span></span>
<span class="line"><span>				&quot;Id&quot;: &quot;1&quot;,</span></span>
<span class="line"><span>				&quot;SubjectIdentifier&quot;: &quot;subj-123&quot;,</span></span>
<span class="line"><span>				&quot;DataPointItems&quot;: [</span></span>
<span class="line"><span>					{</span></span>
<span class="line"><span>						&quot;Key&quot;: &quot;STATUS&quot;,</span></span>
<span class="line"><span>						&quot;Value&quot;: {</span></span>
<span class="line"><span>							&quot;DataType&quot;: &quot;String&quot;,</span></span>
<span class="line"><span>							&quot;Value&quot;: &quot;Ready&quot;</span></span>
<span class="line"><span>						}</span></span>
<span class="line"><span>					},</span></span>
<span class="line"><span>					{</span></span>
<span class="line"><span>						&quot;Key&quot;: &quot;START_OF_PERIOD&quot;,</span></span>
<span class="line"><span>						&quot;Value&quot;: {</span></span>
<span class="line"><span>							&quot;DataType&quot;: &quot;Date&quot;,</span></span>
<span class="line"><span>							&quot;Value&quot;: &quot;2023-09-25&quot;</span></span>
<span class="line"><span>						}</span></span>
<span class="line"><span>					},</span></span>
<span class="line"><span>					{</span></span>
<span class="line"><span>						&quot;Key&quot;: &quot;END_OF_PERIOD&quot;,</span></span>
<span class="line"><span>						&quot;Value&quot;: {</span></span>
<span class="line"><span>							&quot;DataType&quot;: &quot;Date&quot;,</span></span>
<span class="line"><span>							&quot;Value&quot;: &quot;2024-06-08&quot;</span></span>
<span class="line"><span>						}</span></span>
<span class="line"><span>					},</span></span>
<span class="line"><span>					{</span></span>
<span class="line"><span>						&quot;Key&quot;: &quot;NUMBER_OF_RUNS&quot;,</span></span>
<span class="line"><span>						&quot;Value&quot;: {</span></span>
<span class="line"><span>							&quot;DataType&quot;: &quot;Integer&quot;,</span></span>
<span class="line"><span>							&quot;Value&quot;: 1</span></span>
<span class="line"><span>						}</span></span>
<span class="line"><span>					}</span></span>
<span class="line"><span>				]</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>			&quot;Cursor&quot;: &quot;1&quot;</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="previous-versions" tabindex="-1">Previous versions <a class="header-anchor" href="#previous-versions" aria-label="Permalink to &quot;Previous versions&quot;">​</a></h2><p>None</p>`,22),o=[e];function l(u,i,q,c,r,d){return n(),s("div",null,o)}const m=t(p,[["render",l]]);export{h as __pageData,m as default};
